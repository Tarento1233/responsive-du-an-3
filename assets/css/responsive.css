/* PC, trường hợp mày quên thì min-width trong trường hợp này để là từ 992 trở lên nó sẽ tác dụng thuộc tính trong media*/
@media (min-width: 992px) {
  .mobile-header {
    display: none;
  }
}
/* mobile and Tablet, này code chung thuộc tính, max-width thì từ 991.98 trở xuống thì sử dụng thuộc tính trên media*/
@media (max-width: 991.98px) {
  .navbar {
    display: none;
    /* này là muốn khi nó có kích thước giống từ máy tính bảng thì sẽ ẩn navbar */
  }
  /* chuyển logo vào giữa */
  .header-top {
    position: relative;
  }
  .header__logo {
    position: absolute;
    left: 25%; /*sau khi nó cách trái cái nó lệch cmn nó xuống dưới lun  */
    translate: -50% -50%; /*nên dùng cách này để canh lại, mặc dù tao thấy sài translate-y là đc rồi  */
  }
  /* căn lại vị trí menu icon*/
  .menu-header__icon {
    position: absolute;
    top: 38px;
    left: 26px;
    color: #fff;
    width: 24px;
    cursor: pointer;
  }

  /* overplay */
  .menu-overplay {
    position: fixed;
    /* Khi sử dụng position: fixed;, phần tử sẽ không di chuyển khi bạn cuộn trang, và luôn giữ nguyên vị trí 
    ngay cả khi người dùng cuộn xuống hay cuộn lên. */
    background: rgba(0, 0, 0, 0.3);
    inset: 0;
    /* inset:0 này là nó cách 4 cạnh là 0, nói chung để dễ hiểu thì nhập npx ấy
    và nó giống thuộc tính padding kiểu n1px n2px n3px n4px */
    z-index: 1;
    opacity: 0;
    visibility: hidden;
    /* display: none; sài cái này thì ẩn cái visibility đi */
    /* opacity 0(trong suốt) và visibility: hidden(ẩn đi mà vẫn còn chiếm diện tích) để ẩn đi nhưng vẫn tương tác đc các phần tử xung quanh
    hmmm tao mới phát hiện ra là visibility: hidden; trong trường hợp này giúp khi mày lỡ bấm bất kỳ chỗ nào nó sẽ ko hiện ra menu*/
    transition: 0.5s;
  }
  /* kiểm tra menu-checkbox có checked hay ko */
  .menu-checkbox:checked ~ .menu-overplay {
    opacity: 1;
    visibility: visible;
    /* display: block; */
    /* thuộc tính visibility: visible; được sử dụng để làm cho phần tử hiển thị trở lại, nếu nó đã bị ẩn đi trước đó với visibility: hidden; */
  }
  /* code phần menu drawer */
  .menu-drawer {
    position: fixed;
    padding: 60px;
    background: #2c2424;
    inset: 0 40% 0 0;
    z-index: 2;
    transform: translateX(-100%);
    /* cho nó thụt sát bên lề bên tay trái */
    transition: 0.5s;
  }

  /* nếu checkbox đc checked thì hiện menu-drawer */
  .menu-checkbox:checked ~ .menu-drawer {
    transform: translateX(0);
    /* bấm vô menu cái nó trở lại inset: 0 40% 0 0 */
  }

  /* menu top */
  .close__menu {
    width: 24px;
    color: #fff;
    cursor: pointer;
  }
  .menu-drawer__top {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  #navbar__link--mobile {
    margin-top: 25px;
  }
  .navbar__item {
    margin-top: 25px;
  }
  .navbar__link {
    display: block;
  }
  .navbar__link:hover {
    background-color: #e4e4e937;
  }

  /* hero */
  .hero {
    flex-direction: column;
    /* row: Các phần tử được sắp xếp theo chiều ngang, từ trái sang phải.
      row-reverse: Các phần tử được sắp xếp theo chiều ngang, từ phải sang trái.
      column: Các phần tử được sắp xếp theo chiều dọc, từ trên xuống dưới.
       column-reverse: Các phần tử được sắp xếp theo chiều dọc, từ dưới lên trên. */
    gap: 50px;
  }
  .hero__content {
    order: 2;
    /* order được sử dụng trong flexbox để thay đổi thứ tự (sắp xếp) của các phần tử con trong một container 
    mà không cần thay đổi cấu trúc HTML.
    Các phần tử có giá trị order thấp sẽ được hiển thị trước các phần tử có giá trị order cao hơn. */
    width: 80%;
    /* chỉnh kích thước lại cho nó mượt mà thôi */
    text-align: center;
    margin: 22px auto;
  }
  .hero__media {
    order: 1;
  }
  .hero__row {
    justify-content: center;
  }

  /* service */
  .service__row {
    flex-direction: column;
  }

  .service__img {
    width: 100%;
  }
  .service__list {
    margin-top: 20px;
    text-align: center;
  }
  .service-item {
    width: 90%;
    text-align: start;
    /* canh trái thôi, nói chung là do muốn canh giữa cái nút nên phải text-align:center nguyên 1 khối,
    mà làm vậy nó tác động lun các phần tử phía trên nên muốn nó như cũ phải text align:start */
  }
  /* work */
  .work__list {
    grid-template-columns: 1fr;
    /* do cái phần work sài grid */
    row-gap: 30px;
  }
  /* about */
  .about-row {
    flex-direction: column;
    row-gap: 30px;
  }
  .about__media {
    width: 100%;
    /* do cái khối này bên pc có 44% thôi nên phải tăng nó lên 100% để cho ảnh nó 100% lun */
  }
  .about__img--big {
    width: 100%;
    border-radius: 15px;
    margin: 25px auto;
  }
  .about__img--small {
    display: none;
  }
  .about-content {
    width: 90%;
    text-align: center;
  }
}
/*  Tablet này riêng cho máy tính bản */
@media (min-width: 768px) and (max-width: 991.98px) {
}
/* mobile này riêng cho phone*/
@media (max-width: 767.98px) {
}
/*  */

.footer {
  display: none;
}
